theme(strip.text.x = element_text(hjust = 0.5))
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
scale_color_manual(
name = NULL,
values = c("#E69F00", "#0072B2"),
#labels = c("Contact", "Spray", "Inhalation (NF)","Inhalation (FF)")
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
})
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
scale_color_manual(
name = NULL,
values = c("#000000", "#0072B2"),
#labels = c("Contact", "Spray", "Inhalation (NF)","Inhalation (FF)")
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
})
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
scale_color_manual(
values = c("#E69F00", "#0072B2", "#CC79A7", "#d9c7d1"),
#labels = c("Contact", "Spray", "Inhalation (NF)","Inhalation (FF)")
)
waffleplot
waffleplot +
geom_waffle(
#color = "white", size = 0.33
)
masteroutput<-CEMRA::run_model("Test", 10)
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
colnames(masteroutput)[2:5]<-c("Contact", "Inhalation (NF)", "Inhalation (FF)", "Spray")
masteroutput <- tidyr::pivot_longer(masteroutput,cols=2:5)
# make sure this works
masteroutput<- masteroutput %>% group_by(ID) %>%
mutate(value=round_percent(value))
library(hrbrthemes)
library(waffle)
library(ggplot2)
library(dplyr)
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle()
masteroutput
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
scale_color_manual(
values = c("#E69F00", "#0072B2", "#CC79A7", "#d9c7d1"),
labels = c("Contact", "Spray", "Inhalation (NF)","Inhalation (FF)")
)+
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
golem::run_dev()
library(shiny)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),
actionButton("hideshow", "Hide/show plot"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(rnorm(100))
})
observeEvent(input$hideshow, {
# every time the button is pressed, alternate between hiding and showing the plot
toggle("plot")
})
}
shinyApp(ui = ui, server = server)
waffleplot
golem::run_dev()
golem::run_dev()
masteroutput<-CEMRA::run_model("Test", 10)
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
colnames(masteroutput)[2:5]<-c("Contact", "Inhalation (NF)", "Inhalation (FF)", "Spray")
masteroutput
masteroutput <- tidyr::pivot_longer(masteroutput,cols=2:5)
# make sure this works
masteroutput<- masteroutput %>% group_by(ID) %>%
mutate(value=round_percent(value))
masteroutput
masteroutput
masteroutput<-CEMRA::run_model("Test", 100)
masteroutput
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
colnames(masteroutput)[2:5]<-c("Contact", "Inhalation (NF)", "Inhalation (FF)", "Spray")
masteroutput <- tidyr::pivot_longer(masteroutput,cols=2:5)
# make sure this works
masteroutput<- masteroutput %>% group_by(ID) %>%
mutate(value=round_percent(value))
masteroutput
masteroutput<-CEMRA::run_model("Hospital", 100)
# make sure this works
masteroutput<- masteroutput %>% group_by(ID) %>%
mutate(value=round_percent(value))  masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
colnames(masteroutput)[2:5]<-c("Contact", "Inhalation (NF)", "Inhalation (FF)", "Spray")
masteroutput<-CEMRA::run_model("Hospital", 100)
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
colnames(masteroutput)[2:5]<-c("Contact", "Inhalation (NF)", "Inhalation (FF)", "Spray")
masteroutput
# make sure this works
masteroutput<- masteroutput %>% group_by(ID) %>%
mutate(value=round_percent(value))
masteroutput<- masteroutput %>% group_by(ID) %>%
mutate(value=round_percent(value))
masteroutput
masteroutput <- tidyr::pivot_longer(masteroutput,cols=2:5)
masteroutput<- masteroutput %>% group_by(ID) %>%
mutate(value=round_percent(value))
masteroutput
library(hrbrthemes)
library(waffle)
library(ggplot2)
library(dplyr)
group.colors <- c("Contact" = "#E69F00", "Spray" = "#0072B2", `Inhalation (NF)`= "#CC79A7", `Inhalation (FF)`="#d9c7d1")
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
# this isn't working
scale_color_manual(
values = c("#E69F00", "#0072B2", "#CC79A7", "#d9c7d1"),
labels = c("Contact", "Spray", "Inhalation (NF)","Inhalation (FF)")
)+
####################
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
# this isn't working
scale_color_manual(
values = c("#E69F00", "#000000", "#CC79A7", "#d9c7d1"),
labels = c("Contact", "Spray", "Inhalation (NF)","Inhalation (FF)")
)+
####################
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
masteroutput#
masteroutput
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
# this isn't working
scale_color_manual(
values = group.colors
)+
####################
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
# this isn't working
scale_color_manual(
values = group.colors,
aesthetics = c("colour", "fill")
)+
####################
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
masteroutput
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
# this isn't working
scale_color_manual(
values = group.colors,
aesthetics = c("fill")
)+
####################
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
# this isn't working
scale_color_manual(
values = group.colors
)+
####################
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
masteroutput
masteroutput %>%
ggplot(aes(fill = name, values = value)) +
# this isn't working
scale_color_manual(
values = group.colors,
aesthetics = c("fill")
)+
####################
expand_limits(x=c(0,0), y=c(0,0)) +
coord_equal() +
labs(fill = NULL, colour = NULL) +
theme_ipsum_rc(grid="") +
theme_enhance_waffle() -> waffleplot
waffleplot +
geom_waffle(
color = "white", size = 0.33
) +
facet_wrap(~ID) +
theme(strip.text.x = element_text(hjust = 0.5))
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
hrbrthemes::import_roboto_condensed()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
(10^rweibull(1, shape=InfsalivaChenshape, scale=InfsalivaChenscale))
(10^rweibull(1, shape=3.47, scale=7.01))
(rweibull(1000, shape=3.47, scale=7.01))
mean((rweibull(1000, shape=3.47, scale=7.01)))
mean((rweibull(1000, shape=3.47, scale=7.01)))
median((rweibull(1000, shape=3.47, scale=7.01)))
median((rweibull(1000, shape=3.47, scale=6)))
median((rweibull(1000, shape=3.47, scale=5)))
median((rweibull(1000, shape=3.47, scale=4)))
median((rweibull(1000, shape=3.47, scale=3)))
median((rweibull(1000, shape=3.47, scale=2)))
median((rweibull(1000, shape=3.47, scale=1)))
median((rweibull(1000, shape=3.47, scale=3)))
median((rweibull(1000, shape=3.47, scale=1)))
mean((rweibull(1000, shape=3.47, scale=8)))
mean((rweibull(1000, shape=3.47, scale=9)))
golem::run_dev()
golem::run_dev()
metadata<-read.csv("data/metadata.csv")
saveRDS(metadata, "data/metadata.RData")
golem::run_dev()
load("C:/Users/mark.cherrie/Documents/GitHub/CEMRA/data/metadata.RData")
metadata<-read.csv("data/metadata.csv")
View(metadata)
saveRDS(metadata, "data/metadata.RData")
load("C:/Users/mark.cherrie/Documents/GitHub/CEMRA/data/metadata.RData")
file ‘metadata.RData’ has magic number 'X'
file ‘metadata.RData’ has magic number 'X'
saveRDS(metadata, "data/metadata.rds")
golem::run_dev()
golem::run_dev()
#
#metadata<-read.csv("data/metadata.csv")
metadata<-read.csv("data/metadata.csv")
save(metadata, file = "data/metadata.RData")
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
CEMRA::run_model("Hospital_singlepatient.csv", 100)
CEMRA::run_model("Hospital_singlepatient", 100)
masteroutput<-CEMRA::run_model("Hospital_singlepatient", 100)
masteroutput<-CEMRA::run_model("Hospital_singlepatient", 100)
masteroutput$numberinfected<-as.numeric(masteroutput$numberinfected)
masteroutput <- masteroutput %>% select(ID,numberinfected)
masteroutput<-masteroutput %>%
group_by(ID) %>%
summarise(mediannumberinfected=median(numberinfected, na.rm=T))
masteroutput
masteroutput2<-CEMRA::run_model("Hospital_singlepatient", 100)
masteroutput2$numberinfected<-as.numeric(masteroutput2$numberinfected)
masteroutput2 <- masteroutput2 %>% select(ID,numberinfected)
masteroutput2<-masteroutput2 %>%
group_by(ID) %>%
summarise(mediannumberinfected=median(numberinfected, na.rm=T))
scenariorisk<-(round(masteroutput$mediannumberinfected[1]*100000,2))
scenariorisk
scenario2risk<-(round(masteroutput2$mediannumberinfected[2]*100000,2))
scenario2risk
masteroutput2<-CEMRA::run_model("Hospital_singlepatient", 100)
masteroutput2$numberinfected<-as.numeric(masteroutput2$numberinfected)
masteroutput2 <- masteroutput2 %>% select(ID,numberinfected)
masteroutput2<-masteroutput2 %>%
group_by(ID) %>%
summarise(mediannumberinfected=median(numberinfected, na.rm=T))
masteroutput2
scenariorisk<-(round(masteroutput$mediannumberinfected[1]*100000,2))
scenario2risk<-(round(masteroutput2$mediannumberinfected[2]*100000,2))
scenario2risk
masteroutput2$mediannumberinfected
masteroutput2$mediannumberinfected[2]
masteroutput2$mediannumberinfected[1]
golem::run_dev()
masteroutput2$mediannumberinfected
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
hist(rlnorm(1000, meanlog=9, sdlog=0.7)
)
hist(rlnorm(1000, meanlog=9, sdlog=0.7))
hist(rlnorm(1000, meanlog=9, sdlog=0.7))
60000*60
3 x 10^5
3*10^5
3*10^5*2
(3.675*10^4)*2
(3.885 x 10^4)*2
(3.885 * 10^4)*2
1.59* 10^6
hist(rlnorm(1000, meanlog=9, sdlog=0.7))
mean(hist(rlnorm(1000, meanlog=9, sdlog=0.7)))
mean(hist(rlnorm(1000, meanlog=9, sdlog=0.7)), na.rm=T)
20000*60
mean(hist(rlnorm(10000, meanlog=9, sdlog=0.7)), na.rm=T)
mean(hist(rlnorm(10000, meanlog=9, sdlog=0.7)), na.rm=T)
hist(rlnorm(10000, meanlog=9, sdlog=0.7)), na.rm=T
hist(rlnorm(10000, meanlog=9, sdlog=0.7)
)
hist(rlnorm(10000, meanlog=9, sdlog=0.7))
hist(rlnorm(10000, meanlog=3, sdlog=0.7))
hist(rweibull(10000,3.47, ))
hist(rweibull(10000,3.47, 3))
hist(rweibull(10000,3.47, 9))
?rweibull
hist(rweibull(10000,3.47, 9))
hist(rweibull(10000,3.47, 8))
hist(rweibull(10000,3.47, 7))
hist(rweibull(10000,3.47, 8))
hist(rweibull(10000,3.47, 9))
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
?rlnorm
exp(5)
exp(5)*60
exp(4)*60
exp(3)*60
exp(3)*60
exp(2)*60
exp(2)
exp(8)
exp(8)*60
exp(8)
exp(1)
exp(8)
log(8)
exp(8)
(10^rweibull(1, shape=3.47, scale=8))
(rweibull(1, shape=3.47, scale=8))
(1000,rweibull(1, shape=3.47, scale=8))
(rweibull(10000, shape=3.47, scale=8))
mean((rweibull(10000, shape=3.47, scale=8)))
mean((rweibull(10000, shape=3.47, scale=2)))
rlnorm(1, meanlog=2, sdlog=0.7)
mean(rlnorm(10000, meanlog=2, sdlog=0.7))
mean(rlnorm(10000, meanlog=8, sdlog=0.7))
3844*60
10^3
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()

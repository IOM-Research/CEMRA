#############################################################################################################################################
#COMPUTED USING INCLUSION-EXCLUSION FORMULA
rOVERALL<-
rFACE+rLUNGNF+rLUNGFF+rSPRAY-
rFACE*rLUNGNF+rFACE*rLUNGFF+rFACE*rSPRAY+rLUNGNF*rLUNGFF+rLUNGNF*rSPRAY+rLUNGFF*rSPRAY+
rFACE*rLUNGNF*rLUNGFF+rFACE*rLUNGNF*rSPRAY+rFACE*rLUNGFF*rSPRAY+rLUNGNF*rLUNGFF*rSPRAY-
rFACE*rLUNGNF*rLUNGFF*rSPRAY
# calculate how many became infected by multiplying the overall risk by how many are susceptible
numberinfected<-Su*rOVERALL
# combine all the outputs and add them to the original dataframe
result<-cbind(
V,W,Vn,NFsizeperc, betaNF, ACH, pSPRAY, FFtime,
Tmax, Infcoughrateperhour,Ncough, FFinfected, COUGHrate,
CONCsaliva, gf, Infactivity, InfEairTalkS,EairTalkS,InfEairTalkSQA,  INACTIVair,
INACTIVsurface, INACTIVskin, Aportals, TRANSsurface.skin, TRANSskin,
CONTACTsurfaceNF.hand, CONTACTsurfaceFF.hand, CONTACTface.hand, pTARGET,
ExtraExpVolStudy, distsalivavirusconc, Feye, Fspray, Finhale, Ffomite,
rateEair, rateEsurface, rateEair2, rateEsurface2,nsteps,  probthin, probinsp,
Nsurface, Nsurface2, Nair, Nair2, doseFACE, doseLUNG, doseLUNGFF, doseSPRAY,rFACE, rSPRAY, rLUNGNF, rLUNGFF, rOVERALL, numberinfected)
result<-data.frame(result)
return(result)
}
)
CEMRA::run_model("Test", 10)
CEMRA::run_model("Test", 100)
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
FFtime=60
if(FFtime == 100){
choice<-sample(c(0,0,0,0,0,0,0,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 90){
choice<-sample(c(1,0,0,0,0,0,0,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 80){
choice<-sample(c(1,1,0,0,0,0,0,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 70){
choice<-sample(c(1,1,1,0,0,0,0,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 60){
choice<-sample(c(1,1,1,1,0,0,0,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 50){
choice<-sample(c(1,1,1,1,1,0,0,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 40){
choice<-sample(c(1,1,1,1,1,1,0,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 30){
choice<-sample(c(1,1,1,1,1,1,1,0,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 20){
choice<-sample(c(1,1,1,1,1,1,1,1,0,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 10){
choice<-sample(c(1,1,1,1,1,1,1,1,1,0),Tmax/dt, replace=TRUE)
} else if(FFtime == 0){
choice<-sample(c(1,1,1,1,1,1,1,1,1,1),Tmax/dt, replace=TRUE)
}
choice
start.time <- Sys.time()
CEMRA::run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
numCores <- detectCores()
library(foreach)
library(doParallel)
numCores <- detectCores()
num_range()
start.time <- Sys.time()
CEMRA::run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
golem::run_dev()
start.time <- Sys.time()
CEMRA::run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
rm(list = c("run_model"))
start.time <- Sys.time()
CEMRA::run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
golem::run_dev()
start.time <- Sys.time()
run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
registerDoParallel(numCores)
foreach (i=1:3, .combine=rbind) %dopar% {
sqrt(i)
}
func2<-function(input) {
a<-input+1
b<-input+2
output<-list(a=a,b=b)
return(output)
}
output<-func2(5)
for (i in output) {
print(i)
}
func2<-function(input) {
a<-input+1
b<-input+2
return(list(a=a,b=b))
}
output<-func2(5)
output
foreach (i=1:3, .combine=c) %dopar% {
sqrt(i)
}
start.time <- Sys.time()
run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
golem::run_dev()
start.time <- Sys.time()
run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
foreach (i=1:3, .combine=c) %dopar% {
sqrt(i)
}
stopImplicitCluster()
start.time <- Sys.time()
run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
close(con)
close(con)
close(con)
stopCluster(cl)
stopCluster(c)
stopCluster()
?registerDoParallel
registerDoParallel(numCores)
stopImplicitCluster()
registerDoParallel(numCores)
cl <- makePSOCKcluster(numCores)
cl
stopImplicitCluster()
stopImplicitCluster()
stopImplicitCluster()
stopImplicitCluster()
stopImplicitCluster()
stopImplicitCluster()
stopImplicitCluster()
registerDoParallel(numCores)
library(foreach)
foreach(i = 1:3) %do% {
sqrt(i)
}
cl <- parallel::makeCluster(2)
doParallel::registerDoParallel(cl)
foreach(i = 1:3, .combine = 'c') %dopar% {
sqrt(i)
}
cl
golem::run_dev()
start.time <- Sys.time()
run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
warnings()
start.time <- Sys.time()
run_model("Test", 10000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 10)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
golem::run_dev()
start.time <- Sys.time()
run_model("Test", 10)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 100)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
library(profvis)
profvis({
run_model("Test", 100)
})
sessionInfo()
golem::run_dev()
start.time <- Sys.time()
run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
run_model("Test", 1000)
golem::run_dev()
start.time <- Sys.time()
run_model("Test", 1000)
golem::run_dev()
start.time <- Sys.time()
run_model("Test", 1000)
start.time <- Sys.time()
run_model("Test", 10)
library(triangle)
start.time <- Sys.time()
run_model("Test", 10)
golem::run_dev()
library(triangle)
start.time <- Sys.time()
run_model("Test", 10)
library(triangle)
golem::run_dev()
golem::run_dev()
golem::run_dev()
library(triangle)
start.time <- Sys.time()
run_model("Test", 10)
library(profvis)
profvis({
run_model("Test", 100)
})
library(profvis)
profvis({
CEMRA::run_model("Test", 100)
})
golem::run_dev()
library(profvis)
profvis({
run_model("Test", 100)
})
golem::run_dev()
library(profvis)
profvis({
run_model("Test", 100)
})
library(profvis)
profvis({
run_model("Test", 100)
})
golem::run_dev()
library(profvis)
profvis({
run_model("Test", 100)
})
golem::run_dev()
######################
start.time <- Sys.time()
CEMRA::run_model("Test", 1000)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
golem::run_dev()
######################
start.time <- Sys.time()
CEMRA::run_model("Test", 500)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
######################
start.time <- Sys.time()
CEMRA::run_model("Test", 500)
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
CEMRA::run_model("Test", 10)
CEMRA::run_model("Test", 10)
CEMRA::run_model("Test", 10)
golem::run_dev()
CEMRA::run_model("Hospital_Paper_Main_Chen", 20000)
golem::run_dev()
CEMRA::run_model("Hospital_Paper_Main_Chen", 20000)
CEMRA::run_model("Hospital_Paper_Main_Chen", 10)
CEMRA::run_model("Hospital_Paper_Main_Chen", 100)
cemrarun<-CEMRA::run_model("Hospital_Paper_Main_Chen", 100)
cemrarun<-CEMRA::run_model("Hospital_Paper_Main_Chen", 20000)
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
masteroutput<-CEMRA::run_model("Test", 10)
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
masteroutput
apply(masteroutput[, 1], 1, max)
apply(masteroutput[1, ], 1, max)
?pivot_longer
names(masteroutput)
masteroutput<-masteroutput %>% pivot_longer(!ID, names_to="route", values_to="risk")
masteroutput<-masteroutput %>% tidyr::pivot_longer(!ID, names_to="route", values_to="risk")
masteroutput
workprint(sessionInfo())
print(sessionInfo())
masteroutput
masteroutput$route[max(masteroutput$risk),]
masteroutput$route[max(masteroutput$risk)]
masteroutput$route[max(masteroutput$risk),]
masteroutput[max(masteroutput$risk)
)
max(masteroutput$risk)
round(max(masteroutput$risk),1)
round(max(masteroutput$risk),0)
masteroutput$route[max(masteroutput$risk),]
domroute<-with(masteroutput, route[which.max(risk)])
domroute
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
masteroutput
masteroutput<-masteroutput[1:4,1:3]
View(masteroutput)
domroute<-with(masteroutput, route[which.max(risk)])
domroute<-gsub("_mean", "",domroute)
domperc<-round(max(masteroutput$risk),0)
masteroutput<-masteroutput %>% tidyr::pivot_longer(cols=CONTACT_mean :SPRAY_mean, names_to="route", values_to="risk")
masteroutput2<-masteroutput2[1:4,1:3]
domroute<-with(masteroutput2, route[which.max(risk)])
domroute<-gsub("_mean", "",domroute)
domperc<-round(max(masteroutput2$risk),0)
golem::run_dev()
golem::run_dev()
cemrarun<-CEMRA::run_model("Hospital", 100)
cemrarun
cemrarun
cemrarun$ID
cemrarun2<-cemrarun
cemrarun2$ID<-"HOSPITAL2"
c<-rbind(cemrearun, cemrarun2)
cee<-rbind(cemrarun, cemrarun2)
cee
masteroutput<-cee
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
View(masteroutput)
masteroutput<-masteroutput %>% tidyr::pivot_longer(cols=CONTACT_mean :SPRAY_mean, names_to="route", values_to="risk")
View(masteroutput)
masteroutput2<-masteroutput[1:4,1:3]
domroute<-with(masteroutput2, route[which.max(risk)])
domroute<-gsub("_mean", "",domroute)
domperc<-round(max(masteroutput2$risk),0)
scenario2<-with(masteroutput3, ID[which.max(risk)])
scenario2<-with(masteroutput2, ID[which.max(risk)])
scenario2
domperc
masteroutput3<-masteroutput[5:8,1:3]
domroute2<-with(masteroutput3, route[which.max(risk)])
domroute2<-gsub("_mean", "",domroute2)
domperc2<-round(max(masteroutput3$risk),0)
scenario3<-with(masteroutput3, ID[which.max(risk)])
paste0("The dominant route in", scenario2, "is ",
"<font color=\"#FF0000\"><b>", domroute,"</b></font>",
" contributing ",
"<font color=\"#FF0000\"><b>",domperc,"</b></font>",
"% to the total risk",
"The dominant route in", scenario3, "is ",
"<font color=\"#FF0000\"><b>", domroute2,"</b></font>",
" contributing ",
"<font color=\"#FF0000\"><b>",domperc2,"</b></font>",
"% to the total risk"
)
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
golem::run_dev()
masteroutput <- CEMRA::run_model("Hospital", 100)
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
masteroutput
masteroutput <- tidyr::pivot_longer(masteroutput,cols=CONTACT_mean :SPRAY_mean)
masteroutput$value
floor(masteroutput$value)
masteroutput$floor<-floor(masteroutput$value)
View(masteroutput)
sum(masteroutput$floor)
masteroutput$round<-round(masteroutput$value)
masteroutput$round
sum(masteroutput$round)
View(masteroutput)
masteroutput$floorerror<-masteroutput$floor/masteroutput$value*100
masteroutput$rounderror<-masteroutput$round/masteroutput$value*100
View(masteroutput)
masteroutput$floorerror<-masteroutput$floor-masteroutput$value*100
masteroutput$rounderror<-masteroutput$round-masteroutput$value*100
View(masteroutput)
masteroutput$floorerror<-(masteroutput$floor-masteroutput$value)*100
masteroutput$rounderror<-(masteroutput$round-masteroutput$value)*100
View(masteroutput)
masteroutput$differror<-masteroutput$floorerror-masteroutput$rounderror
View(masteroutput)
masteroutput$round<-round(masteroutput$value)
masteroutput$round
sum(masteroutput$round)
masteroutput$rounderror<-(masteroutput$round-masteroutput$value)*100
masteroutput$round
masteroutput$rounderror
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
masteroutput <- tidyr::pivot_longer(masteroutput,cols=CONTACT_mean :SPRAY_mean)
masteroutput$floor<-floor(masteroutput$value)
masteroutput <- CEMRA::run_model("Hospital", 200)
masteroutput<-masteroutput %>%
group_by(ID) %>%
select(ID, rFACE, rLUNGNF, rLUNGFF, rSPRAY) %>%
mutate_at(., c("rFACE", "rLUNGNF", "rLUNGFF", "rSPRAY"), ~as.numeric(.)) %>%
summarise(CONTACT_mean =      mean(rFACE  /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_NF_mean = mean(rLUNGNF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
INHALATION_FF_mean = mean(rLUNGFF/(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100),
SPRAY_mean =        mean(rSPRAY /(rLUNGNF+rLUNGFF+rFACE+rSPRAY)*100))
masteroutput <- tidyr::pivot_longer(masteroutput,cols=CONTACT_mean :SPRAY_mean)
masteroutput$floor<-floor(masteroutput$value)
View(masteroutput)
sum(masteroutput$floor)
sum(masteroutput$round)
masteroutput$round<-round(masteroutput$value)
sum(masteroutput$round)
n=nrow(masteroutput)
n
up_count = 100 - sum(masteroutput$round)
up_count
masteroutput
